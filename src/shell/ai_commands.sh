#!/bin/bash

# Set up FIFO for stderr
STDERR_FIFO="/tmp/stderr_fifo_$$"
export CAT_PID=""

PROMPT_SYMBOL="👤"
CMD_SYMBOL="⚡"
CHOICE_SYMBOL="🔘"
QUESTION_SYMBOL="❓"


aicollect () {
    if [ "$1" == "start" ]; then
        ai_start_monitor
    elif [ "$1" == "stop" ]; then
        ai_stop_monitor
    else
        echo "Invalid argument: $1"
    fi
}

ai_start_monitor() {
    ai_stop_monitor
    
    rm -f /tmp/stderr_fifo_*
    mkfifo "$STDERR_FIFO"

    # redirect stderr to fifo, and to python script
    cat "$STDERR_FIFO" | python $AITERM_DIR/src/ai_term/shell/term_shell.py &
    export CAT_PID=$!
    exec 3>&2
    exec 2> "$STDERR_FIFO"
}

ai_stop_monitor() {
    if [ -z "$CAT_PID" ]; then
        return
    fi
    echo "Stopping stderr monitor"
    kill $CAT_PID
    export CAT_PID=""
    exec 2>&3-
    rm -f "$STDERR_FIFO"
}

# Aliases for one-liners
alias aiask='python $AITERM_DIR/src/ai_term/shell/aiask.py'
alias aiscript='python $AITERM_DIR/src/ai_term/shell/aiscript.py'
alias aierr='python $AITERM_DIR/src/ai_term/shell/aierr.py'
alias ailast='aierr 1'
alias aiprops='python $AITERM_DIR/src/ai_term/config.py'

aicmd() {
    # if no args, print all commands
    if [ -z "$1" ]; then
        # Print a numbered list of commands
        awk '{print NR ". " $0}' /tmp/predicted_commands.txt
        # ask user to select a command
        read -p "$QUESTION_SYMBOL " selection
        cmd=$(sed -n "${selection}p" /tmp/predicted_commands.txt)
    else
        cmd=$(sed -n "${1}p" /tmp/predicted_commands.txt)
    fi

    # if empty cmd, return
    if [ -z "$cmd" ]; then
        echo "Invalid selection: $1 - $cmd"
        return
    fi

    # if no confirm = y
    if [ "$2" == "y" ]; then
        eval $cmd
    else
        # Confirm before executing
        read -p "$QUESTION_SYMBOL $cmd (y/n) " confirm
        if [[ $confirm != [yY] ]]; then
            echo "Command execution cancelled."
        else
            eval $cmd
        fi
    fi
}

aihelp() {
    # check if splash mode and .env file contains HIDE_SLASH_HELP= 
    HIDE_SLASH_HELP=$(grep "HIDE_SLASH_HELP=True" $AITERM_DIR/.env)
    if [ "$1" == "splash" ] && [ -n "$HIDE_SLASH_HELP" ]; then
        return
    fi
    echo
    echo "AI Term commands"
    echo "================"
    echo -e "\033[32maiask\033[0m \033[33m<question>\033[0m: ask AI a question"
    echo -e "\033[32maiscript\033[0m \033[33m<request>\033[0m: create scripts to automate tasks"
    echo -e "\033[32maicmd\033[0m \033[33m<optional number>\033[0m \033[33m<optional confirm>\033[0m: execute a command generated by AI via aiask/stderr collector"
    echo -e "\033[32maicollect\033[0m \033[33m<start|stop>\033[0m: start/stop the stderr collector"
    echo -e "\033[32maierr\033[0m \033[33m<optional number>\033[0m: show last errors, send chosen command & error to AI"
    echo -e "\033[32mailast\033[0m: send last command & error to AI (same as aierr 1)"
    echo -e "\033[32maiprops\033[0m: show AI assistant properties"
    echo -e "\033[32maihelp\033[0m: show this help message"
    echo
}

